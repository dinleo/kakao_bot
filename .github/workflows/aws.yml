# install
# build (webpack)
#    main.js -> dist/main.cjs (compile)
# zip & deploy
# export handler
#    dist/main.cjs -> dist/index.js -> aws lambda

name: Deploy to Amazon ECS

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy_lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_LAMBDA_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LAMBDA_ACCESS_SECRET }}
          aws-region: ap-northeast-2

#      - name: Generate Environment Variables File for Production
#        run: |
#          echo "AWS_S3_ACCESS_ID=$AWS_S3_ACCESS_ID" >> .env
#          echo "AWS_S3_ACCESS_SECRET=$AWS_S3_ACCESS_SECRET" >> .env
#          echo "AWS_S3_ACCESS_POINT_ARN=$AWS_S3_ACCESS_POINT_ARN" >> .env
#        env:
#          AWS_S3_ACCESS_ID: ${{ secrets.AWS_S3_ACCESS_ID }}
#          AWS_S3_ACCESS_SECRET: ${{ secrets.AWS_S3_ACCESS_SECRET }}
#          AWS_S3_ACCESS_POINT_ARN: ${{ secrets.AWS_S3_ACCESS_POINT_ARN }}

      - name: npm install
        env:
          CI: true
        run:
          npm install
      - name: build
        run:
          npm run build
      - name: zip
        run: |
          cd dist
          zip -j deploy.zip ./*
          cd ..
      - name: deploy
        run:
          aws lambda update-function-code --function-name=kakao_bot --zip-file=fileb://dist//deploy.zip